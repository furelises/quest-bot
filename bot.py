import telebot
import info
from dotenv import dotenv_values
from user import User
import btn

config = dotenv_values(".env")
token = config['token']
bot = telebot.TeleBot(token=token)


@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç,—ç—Ç–æ –±–æ—Ç-–∫–≤–µ—Å—Ç! –í —ç—Ç–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç. –Ø –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –º–æ—è —Ä–∞–±–æ—Ç–∞ –∏ –≤—ã –ø—Ä–æ—Ä–µ–∫–ª–∞–º–∏—Ä—É–µ—Ç–µ –º–µ–Ω—è –¥—Ä—É–∑—å—è–º!üòÅ(–ï—â–µ –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–∏–ø–∞ - –ø—Ä–∏–≤–µ—Ç –∏–ª–∏ –ø–æ–∫–∞)')
    bot.send_message(message.chat.id, "–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è —É–º–µ—é –≤—ã–ø–æ–ª–Ω—è—Ç—å:\n"
                                      "/start ; –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É –º–µ–Ω—é.\n"
                                      "/help ; –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É –º–µ–Ω—é.\n"
                                      "/play ; –ù–∞—á–∏–Ω–∞–µ—Ç –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞.\n"
                                      "/restart ; –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ –∑–∞–Ω–æ–≤–æ.\n")
    bot.send_message(message.chat.id, info.project_to_str())


@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º-–∫–≤–µ—Å—Ç–æ–º : ...')
    bot.send_message(message.chat.id, "–≠—Ç–æ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è —É–º–µ—é –≤—ã–ø–æ–ª–Ω—è—Ç—å:\n"
                                      "/start ; –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É –º–µ–Ω—é.\n"
                                      "/help ; –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É –º–µ–Ω—é.\n"
                                      "/play ; –ù–∞—á–∏–Ω–∞–µ—Ç –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞.\n"
                                      "/restart ; –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ –∑–∞–Ω–æ–≤–æ.\n")


def next_layer(user: User, chat_id: int):
    current_layer = info.get_current_layer(user)
    answer = user.get_path()
    if current_layer.is_last():

        bot.send_message(chat_id, "–∫–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
        bot.send_message(chat_id, "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /restart")
        if info.is_winner(user):
            bot.send_message(chat_id, "winner")
            bot.send_message(chat_id, '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∏ –≤—ã–±—Ä–∞–ª–∏—Å—å –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å!')
            bot.send_photo(chat_id, open("./i/win.jpg", 'rb'))
        else:
            bot.send_message(chat_id, "lose")
            bot.send_message(chat_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏... –£–¥–∞—á–∏ –≤ –∑–∞–≥—Ä–æ–±–Ω–æ–º –º–∏—Ä–µ. ")
            bot.send_photo(chat_id, open("./i/lose.jpg", 'rb'))
        return
    desc = current_layer.desc
    buttons = current_layer.get_sub_buttons()
    bot.send_photo(chat_id, current_layer.get_picture())
    bot.send_message(chat_id, desc, reply_markup=btn.create_menu(buttons))


@bot.message_handler(commands=['play'])
def play_command(message):
    try:
        user_id = message.from_user.id
        user = User(user_id)
        next_layer(user, message.chat.id)
    except Exception as ex:
        print(ex)
        bot.send_message(message.chat.id, "shit happens...")


@bot.message_handler(commands=['restart'])
def play_command(message):
    try:
        user_id = message.from_user.id
        user = User(user_id)
        user.restart()
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ /play —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç –∑–∞–Ω–æ–≤–æ.")
    except Exception as ex:
        print(ex)
        bot.send_message(message.chat.id, "shit happens...")


@bot.message_handler(content_types=['text'])
def hello_saying(message):
    if "–ø—Ä–∏–≤–µ—Ç" in message.text.lower():
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!")
    elif "–ø–æ–∫–∞" in message.text.lower():
        bot.send_message(message.chat.id, "–ü–æ–∫–∞!")
    else:
        bot.send_message(message.chat.id, "–Ø –ø–æ–¥—É–º–∞—é –æ–± —ç—Ç–æ–º ... :)")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        user_id = call.from_user.id
        user = User(user_id)
        user.handler(call.data)
        next_layer(user, call.message.chat.id)
    except Exception as ex:
        print(ex)
        bot.send_message(call.message.chat.id, "shit happens...")


bot.polling()
